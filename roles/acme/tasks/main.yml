---

- name: Install acme.sh
  pkgng:
    name: "{{ acme_packages }}"
    state: present

- name: Create log directory for acme.sh
  file:
    path: "{{ acme_log_path }}"
    mode: 0750
    owner: "{{ acme_user }}"
    group: "{{ acme_group }}"
    state: directory

- name: Create account.conf file for acme.sh
  copy:
    content: |
      CERT_HOME="{{ acme_cert_home }}"
      LOG_FILE="{{ acme_log_file }}"
      {% for item in acme_env %}
      {{ '%s="%s"'|format(item.key|quote, item.value|quote) }} {% endfor %}
    dest: "{{ acme_home }}/.acme.sh/account.conf"
    force: no
    mode: 0640
    owner: "{{ acme_user }}"
    group: "{{ acme_group }}"

- name: Copy dnsapi shell script to acme.sh home
  copy:
    src: "{{ acme_home }}/.acme.sh/dnsapi/dns_{{ acme_dns }}.sh"
    dest: "{{ acme_script_path }}"
    remote_src: yes
    force: no
    mode: 0700
    owner: "{{ acme_user }}"
    group: "{{ acme_group }}"
  register: acme_dnsapi_copy

- name: Patch dnsapi shell script with supported regexp
  shell:
    cmd: |
      sed -i '' 's/\\s/[[:blank:]]/g' {{ acme_script_path }}
    warn: no
  when:
    - acme_dnsapi_copy.changed

- name: Patch dnsapi shell script functions names
  shell:
    cmd: |
      sed -i '' 's/dns_{{ acme_dns }}/dns_{{ acme_dns }}_ansible/g' {{ acme_script_path }}
    warn: no
  when:
    - acme_dnsapi_copy.changed

- name: Issue certificate for mail host
  shell:
    cmd: |
      su - {{ acme_user }} -c 'acme.sh --issue {% if acme_test %}--test --debug {% endif %}--dns {{ acme_script_name }} {% if acme_dnssleep %}--dnssleep {{ acme_dnssleep }}{% endif %} -d {{ hostname }}'
    creates: "{{ acme_cert_file }}"
    warn: no

- name: Create directory to install generated by acme.sh certificate to
  file:
    path: "{{ acme_install_path }}/{{ hostname }}"
    mode: 0750
    owner: "{{ acme_install_path_owner }}"
    group: "{{ acme_install_path_group }}"
    state: directory

- name: Install certificate files for mail host
  shell:
    cmd: |
      su - {{ acme_user }} -c 'acme.sh --install-cert -d {{ hostname }} \
      --key-file {{ acme_install_key_file }} \
      --cert-file {{ acme_install_cert_file }} \
      --fullchain-file {{ acme_install_fullchain_file }}'
    creates: "{{ acme_install_fullchain_file }}"
    warn: no
  register: acme_install_result

- name: Set installed certificate files permissions
  file:
    path: "{{ item.path }}"
    mode: "{{ item.mode }}"
    owner: "{{ acme_install_path_owner }}"
    group: "{{ acme_install_path_group }}"
  loop:
    - path: "{{ acme_install_key_file }}"
      mode: '600'
    - path: "{{ acme_install_cert_file }}"
      mode: '640'
    - path: "{{ acme_install_fullchain_file }}"
      mode: '640'
  when:
    - acme_install_result.changed

- name: Add cronjob to renew certificate
  cron:
    name: "renew certificate using acme.sh"
    job: "acme.sh --cron"
    user: "{{ acme_user }}"
    hour: "22"
    minute: "24"
